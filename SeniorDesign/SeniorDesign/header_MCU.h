#ifndef HEADER_MCU_H
#define HEADER_MCU_H
////////////////////////////////////////////////////////////////////////////////////////////////////
//									          MCU Header										  //
////////////////////////////////////////////////////////////////////////////////////////////////////
/*
	This library provides low-level functions to perform generic actions. This library is
	for all functions that do not belong to another module class.
*/ 
////////////////////////////////////////////////////////////////////////////////////////////////////
//											   Libraries										  //
////////////////////////////////////////////////////////////////////////////////////////////////////
#include <avr/io.h>

////////////////////////////////////////////////////////////////////////////////////////////////////
//									        Type Definitions								      //
////////////////////////////////////////////////////////////////////////////////////////////////////

/***************************************************************************************************
	Type Definition: Bool
	Description:
		Identifies FALSE as 0 and TRUE as 1
			 
***************************************************************************************************/
typedef enum{FALSE,TRUE} Bool;

////////////////////////////////////////////////////////////////////////////////////////////////////
//										     Public Functions									  //
////////////////////////////////////////////////////////////////////////////////////////////////////

/***************************************************************************************************
	Function: isNum
		- Returns whether 'c' is a numerical character (0 -> 9)
		
***************************************************************************************************/
Bool MCU_isNum(char c);

/***************************************************************************************************
	Function: isNum
		- Returns number of characters in 'str' until terminating character
		
***************************************************************************************************/
uint8_t MCU_strlen(char * str);


/***************************************************************************************************
	Function: atoi
		- Returns integer from initial portion of 'str' (terminated by non-numeric character)
		
***************************************************************************************************/
int MCU_atoi(char * str);

/***************************************************************************************************
	Function: itoa
		- Places integer 'val' into 'str', including terminating character
		
***************************************************************************************************/
void MCU_itoa(int val, char * str);

/***************************************************************************************************
	Function: strcpy
		- Copies all characters from 'src' into 'dest', including terminating character
		
***************************************************************************************************/
void MCU_strcpy(char * dest, char * src);

/***************************************************************************************************
	Function: strcmp
		- Compares 'len' characters of 'str1' and 'str2'
		
***************************************************************************************************/
Bool MCU_strcmp(char * str1, char * str2, uint8_t len);

////////////////////////////////////////////////////////////////////////////////////////////////////
//									          Public MACROS									      //
////////////////////////////////////////////////////////////////////////////////////////////////////

#endif